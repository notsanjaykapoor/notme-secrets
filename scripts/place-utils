#!/usr/bin/env python

import json
import os
import sys

sys.path.insert(1, os.path.join(sys.path[0], ".."))

import dot_init

import click

import services.cities
import services.console
import services.database.session
import services.places
import services.users

@click.group()
def cli():
    pass

@click.command()
@click.option("--name", default=None, required=True, help="city name")
@click.option("--city", "city_name", default=None, required=True, help="city name")
@click.option("--email", default="notsanjaykapoor@gmail.com", required=False, help="user email")
def add(name: str, city_name: str, email) -> list[str]:
    """
    Add place to places table.
    """
    services.console.print_status(f"place '{name}' near city '{city_name}' add")

    with services.database.session.get() as db_session:
        place_db = services.places.get_by_name(db_session=db_session, name=name)

        if place_db:
            services.console.print_status(f"place '{name}' exists - id {place_db.id}")
            exit(0)

        # geo search for place
        city_db = services.cities.get_by_name(db_session=db_session, name=city_name)

        if not city_db:
            services.console.print_error(f"city '{city_name}' not found")
            exit(-1)

        code, geo_list = services.places.geo_search_by_name(city=city_db, name=name)

        if code != 0:
            services.console.print_error(f"geo search '{name}' error")
            exit(0)

        if len(geo_list) > 1:
            services.console.print_error(f"geo search '{name}' return {len(geo_list)} results")
            exit(0)

        geo_json = geo_list[0]

        user = services.users.get_by_email(db_session=db_session, email=email)

        code, place_db = services.places.create(
            db_session=db_session,
            name=name,
            user=user,
            city=city_db,
            geo_json=geo_json,
        )

        services.console.print_ok(f"place '{name}' created - id {place_db.id}")

cli.add_command(add)

if __name__ == "__main__":
    cli()
